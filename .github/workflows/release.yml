name: Release

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write
  id-token: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1) Install pnpm so setup-node can cache pnpm
      - uses: pnpm/action-setup@v4
        with:
          version: 10.17.1
          run_install: false

      # 2) Setup Node + pnpm cache
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - run: pnpm -v && node -v

      - name: Install deps
        run: pnpm install --frozen-lockfile

      # Optional gates (fast fail if something broke). Keep or remove as you like.
      - name: Build
        run: pnpm -r build

      - name: Size check
        run: pnpm -r size || (echo "Size check failed" && exit 1)

      # Optional: sanity check that the token is present before publish
      - name: NPM auth check (dry)
        if: ${{ env.NPM_TOKEN != '' }}
        run: echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > ~/.npmrc && npm whoami || true
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release PR or publish
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
          publish: pnpm -r publish --access public
          commit: "chore(release): version packages"
          title: "chore(release): version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}